created: 20190401050206784
creator: Mohammad
keywords: secondary doubly sort get each 
modified: 20190406122515196
modifier: Mohammad
responder: S.S.
tags: exmp57 solution
title: Create a Doubly Sorted Table
type: text/vnd.tiddlywiki
url: https://groups.google.com/d/msg/tiddlywiki/FjQ8yFw8F0M/X8aBlOjvAwAJ

; How to create a table from a list of tiddlers which is sorted first by value of field 1 and then sort the rsult by value of field 2?
: This is called a doubly sorted list and can be done using a nested `$list` widget

!! Example
Assume there is a list of tiddlers contain the biblography data of some ebooks as below

* tiddler `title`: ebook title
* `vendor` field: publisher name
* `author` field: ebook author name

Create a table contains ebook data sorted //first// in `vendor` name and //second// in `author` name.

```
<table>
<$list filter="[tag[ebook]has[vendor]each[vendor]get[vendor]sort[]]" variable="publisherName">
<$list filter="[tag[ebook]has[vendor]field:vendor<publisherName>sort[author]]" variable="bookName">
<tr>
  <td>
    <$link to={{!!title}}><$view tiddler=<<bookName>> field="title"/></$link>
  </td>
  <td>
    <$view tiddler=<<bookName>> field='author'/>
  </td>
  <td>
    <$view tiddler=<<bookName>> field='vendor'/>
  </td>
</tr>
</$list>
</$list>
</table>
```

!! Remarks
The first `$list` filter:

* Gets a list of all my books (tagged //ebook//)
* Looks at the `vendor` field and gets a list of vendors using the `get` operator
** Since the `get` operator is one of the few operators that allow duplicates, it is possible to have the same `vendor` listed multiple times in the list created 
* So first use the `each` operator to ensure unique items (vendors).
* Then this list of all vendors is sorted by the vendor's name


The second `$list` filter will then runs for every `vendor` in the list created by the first `$list`

* For the first item - which is the first vendor's name
** It first gets a list of all the books (tagged //ebook//)
** Then looks at the `vendor` field - selects the ones that match this first `vendor`
** Then sorts those by the `author` field
* Then it does that for the 2nd author in the list provided by the first `$list` filter 
* . . . and so on for all the vendors one by one as provided by the first `$list` filter.




!! More info
See [[Example 57: Doubly Sorted Table]]

Also see [[List by Tag but Sort and Show by Field Value]]